version: '3.8'

services:
  # --- 백엔드 서비스 정의 (변경 없음) ---
  backend:
    build: ./backend
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # --- 프론트엔드 서비스 정의 (수정됨) ---
  frontend:
    # build 명령을 수정하여, frontend 폴더의 새로운 Dockerfile.nginx를 사용하도록 지정합니다.
    build:
      context: ./frontend
      dockerfile: Dockerfile.nginx
    ports:
      # 로컬 PC의 3000번 포트를, 컨테이너 내부 Nginx의 80번 포트와 연결합니다.
      - "3000:80"
    depends_on:
      - backend

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=eno_health
      - POSTGRES_USER=eno_user
      - POSTGRES_PASSWORD=eno_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - eno-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eno-network

  # MKM Core AI (기존 서비스)
  mkm-core-ai:
    image: mkm-core-ai:latest
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
    volumes:
      - ./mkm-core-ai:/app
    networks:
      - eno-network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - eno-network

volumes:
  postgres_data:
  redis_data:

networks:
  eno-network:
    driver: bridge 